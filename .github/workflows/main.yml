name: Run Tests, Build & Push

# masterへのpushとPRで発火。
# 現在は本番環境しか無いのでmasterへのpush時に追加でデプロイ
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - ready_for_review
      - reopened
      - synchronized

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout GitHub Actions
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: true
          build-args: |
            SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}
          tags: kter/itinitiitizen:latest

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      #- name: Move cache
      #  run: |
      #    rm -rf /tmp/.buildx-cache
      #    mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: app
          image: kter/itinitiitizen:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: web
          cluster: itizen
          wait-for-service-stability: true
  #deploy:
  #  name: Deploy to Production
  #  runs-on: ubuntu-16.04
  #  if: github.ref == 'refs/heads/master'
  #  needs: [build]
  #  steps:
  #    - uses: actions/checkout@master

  #    - name: Install doctl
  #      uses: digitalocean/action-doctl@v2
  #      with:
  #        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  #    - name: Save DigitalOcean kubeconfig
  #      run: doctl kubernetes cluster kubeconfig save itizen

  #    - name: Save Secrets To Cluster
  #      run: |
  #        cat << __EOF__ > .credentials
  #        APP_NAME=${{ secrets.APP_NAME }}
  #        APP_URL=${{ secrets.APP_URL }}
  #        DB_USER=${{ secrets.DB_USER }}
  #        DB_PASS=${{ secrets.DB_PASS }}
  #        DB_HOST=${{ secrets.DB_HOST }}
  #        DB_NAME=${{ secrets.DB_NAME }}
  #        DB_PORT=${{ secrets.DB_PORT }}
  #        GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
  #        GCP_PRIVATE_KEY_ID=${{ secrets.GCP_PRIVATE_KEY_ID }}
  #        GCP_PRIVATE_KEY=${{ secrets.GCP_PRIVATE_KEY }}
  #        GCP_CLIENT_EMAIL=${{ secrets.GCP_CLIENT_EMAIL }}
  #        GCP_CLIENT_ID=${{ secrets.GCP_CLIENT_ID }}
  #        GCP_CLIENT_X509_CERT_URL=${{ secrets.GCP_CLIENT_X509_CERT_URL }}
  #        GOOGLE_APP_ID=${{ secrets.GOOGLE_APP_ID }}
  #        GOOGLE_APP_SECRET=${{ secrets.GOOGLE_APP_SECRET }}
  #        RAILS_ENV=${{ secrets.RAILS_ENV }}
  #        SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}
  #        __EOF__
  #        kubectl create secret generic credentials --from-env-file .credentials --dry-run -o yaml | kubectl apply -f -

  #    - name: Deploy to DigitalOcean Kubernetes
  #      run: kubectl set image --record deployment/prod-itizen-app itizen=${{ github.repository }}:sha-${GITHUB_SHA::7}

  #    - name: Verify deployment
  #      run: kubectl rollout status deployment/prod-itizen-app

